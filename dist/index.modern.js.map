{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["const {\n  flow,\n  map,\n  pick,\n  filter,\n  sortBy,\n  groupBy,\n  mapValues,\n} = require('lodash/fp');\n\nexport default class FilterBuilder {\n  constructor() {\n    this.resetQuery();\n  }\n\n  select(keys) {\n    // this.flow.push(map((x) => pick(keys)(x)));\n    this.selectKeys = [...new Set([...this.selectKeys, ...keys])];\n    return this;\n  }\n\n  where(...query) {\n    this.makeAnd();\n    if (typeof query[0] === 'function') {\n      this.query += '(';\n      query[0](this);\n      this.query += ')';\n    } else {\n      if (query.length === 1) {\n        this.query += `(item.${query[0]})`;\n      } else if (query.length === 2) {\n        this.query += `(item.${query[0]} == ${\n          typeof query[1] === 'string' ? '\"' + query[1] + '\"' : query[1]\n        })`;\n      } else if (query.length === 3) {\n        this.query += `(item.${query[0]} ${query[1]} ${\n          typeof query[2] === 'string' ? '\"' + query[2] + '\"' : query[2]\n        })`;\n      }\n    }\n    return this;\n  }\n\n  orWhere(...query) {\n    this.query += ' || ';\n    return this.where(...query);\n  }\n\n  whereIncludes(list, key, value = null) {\n    this.makeAnd();\n    if (value == null) {\n      this.query += `(item.${list} ? item.${list}.includes('${key}') : false)`;\n      return this;\n    }\n    this.query += `(item.${list} ? item.${list}.some(element => element.${key} === '${value}') : false)`;\n    return this;\n  }\n\n  orWhereIncludes(list, key, value = null) {\n    this.query += ' || ';\n    this.whereIncludes(list, key, value);\n    return this;\n  }\n\n  whereContains(key, value) {\n    this.makeAnd();\n    this.query += `(item.${key} ? item.${key}.toLowerCase().includes('${value.toLowerCase()}') : false)`;\n    return this;\n  }\n\n  orWhereContains(key, value) {\n    this.query += ' || ';\n    this.whereContains(key, value);\n    return this;\n  }\n\n  whereIn(key, list) {\n    this.makeAnd();\n    this.query += `(item.${key} ? [\"${list.join(\n      '\", \"',\n    )}\"].includes('' + item.${key}) : false)`;\n    return this;\n  }\n\n  orWhereIn(key, list) {\n    this.query += ' || ';\n    this.whereIn(key, list);\n    return this;\n  }\n\n  makeAnd() {\n    if (this.query.slice(-1).includes(')')) {\n      this.query += ' && ';\n    }\n  }\n\n  sort(keys) {\n    // this.flow.push(sortBy(keys));\n    this.sortKeys = [...new Set([...this.sortKeys, ...keys])];\n    return this;\n  }\n\n  group(keys) {\n    this.groupKeys = [...new Set([...this.groupKeys, ...keys])];\n    return this;\n  }\n\n  #nest = (key) => (array) => {\n    if (!key.length) return array;\n    const first = key[0];\n    const rest = key.slice(1);\n    return mapValues((x) => this.#nest(rest)(x))(groupBy(first)(array));\n  };\n\n  #stripEmpties() {\n    this.query = this.query.replace(/&& \\(\\)/g, '');\n    this.query = this.query.replace(/\\(\\)\\s\\s&&/g, '');\n    this.query = this.query.replace(/\\(\\)\\s&&/g, '');\n  }\n\n  get(data) {\n    this.#stripEmpties();\n    return flow(\n      filter((item) => new Function('item', `'use strict';return ${this.query};`)(item)),\n      map((x) => pick(this.selectKeys)(x)), // this for select\n      sortBy(this.sortKeys), // this for sort\n      this.#nest(this.groupKeys), // this for group\n    )(data);\n  }\n\n  resetQuery() {\n    this.query = '';\n    this.selectKeys = [];\n    this.sortKeys = [];\n    this.groupKeys = [];\n  }\n}\n"],"names":["flow","map","pick","filter","sortBy","groupBy","mapValues","require","FilterBuilder","constructor","key","array","length","first","rest","slice","x","_classPrivateFieldLooseBase","this","resetQuery","select","keys","selectKeys","Set","where","query","makeAnd","orWhere","whereIncludes","list","value","orWhereIncludes","whereContains","toLowerCase","orWhereContains","whereIn","join","orWhereIn","includes","sort","sortKeys","group","groupKeys","get","data","_stripEmpties","item","Function","_nest","replace"],"mappings":"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"}